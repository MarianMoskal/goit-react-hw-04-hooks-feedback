{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js"],"names":["Button","styled","button","FeedbackOptions","props","eventHandler","names","map","name","id","type","onClick","Container","div","h1","Section","title","children","Paragraf","p","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotal","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAASC,IAAOC,OAAV,mP,OCiBJC,I,IAAAA,EAhBf,SAAyBC,GACvB,IAAQC,EAAwBD,EAAxBC,aAEN,OAF8BD,EAAVE,MAGZC,KAAI,SAAAC,GAAI,OACR,cAACR,EAAD,CAAmBS,GAAID,EAAME,KAAK,SAASC,QAASN,EAApD,SACGG,GADUA,OCNZI,EAAYX,IAAOY,IAAV,uGAMDZ,IAAOa,GAAV,0BCWHC,I,IAAAA,EAhBf,SAAiBX,GACf,IAAQY,EAAoBZ,EAApBY,MAAOC,EAAab,EAAba,SAEf,OACE,eAACL,EAAD,WACGI,GAAS,6BAAKA,IACdC,MCPML,EAAYX,IAAOY,IAAV,0GAMTK,EAAWjB,IAAOkB,EAAV,iDCuBNC,MA5Bf,SAAoBD,GAClB,IAAQE,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,QAASC,EAAmCJ,EAAnCI,IAAKC,EAA8BL,EAA9BK,MAAOC,EAAuBN,EAAvBM,mBAEnC,OACE,eAAC,EAAD,WACa,IAAVD,GAAe,mDAEfA,EAAQ,GACP,qCACE,eAACN,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBI,KACpB,eAACJ,EAAD,mBAAgBK,KAChB,eAACL,EAAD,qBAAkBM,KAClB,eAACN,EAAD,iCAA8BO,EAA9B,cCkCKC,MA7Cf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAoBA,SAASC,IACP,OAAOV,EAAOC,EAAUC,EAO1B,OACE,eAAC,EAAD,CAASP,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBV,MA5BP,CAAC,OAAQ,UAAW,OA4BCD,aA1BnC,SAAyB2B,GACvB,OAAQA,EAAEC,OAAOxB,IACf,IAAK,OACH,OAAOmB,EAAQP,EAAO,GAExB,IAAK,UACH,OAAOQ,EAAWP,EAAU,GAE9B,IAAK,MACH,OAAOQ,EAAOP,EAAM,GAEtB,QACE,WAeF,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,mBAXGS,KAAKC,MAAOd,EAAOU,IAAgB,WC5B9CK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.abe93cea.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 80px;\n  padding: 8px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-weight: 500;\n  color: blue;\n  background-color: yellow;\n  &:not(:last-of-type) {\n    margin-right: 20px;\n  }\n`;\n","import { Button } from \"./FeedbackOptions.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions(props) {\n  const { eventHandler, names } = props;\n\n    return (\n      names.map(name => (\n            <Button key={name} id={name} type=\"button\" onClick={eventHandler}>\n              {name}\n            </Button>\n      ))\n    );\n}\nFeedbackOptions.propTypes = {\n  names: PropTypes.arrayOf(PropTypes.string).isRequired,\n  eventHandler: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  text-align: center;\n  background-color: yellowgreen;\n  padding: 20px;\n`;\n\nexport const Title = styled.h1``;\n","import { Container } from \"./Section.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction Section(props) {\n  const { title, children } = props;\n\n  return (\n    <Container>\n      {title && <h1>{title}</h1>}\n      {children}\n    </Container>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  text-align: center;\n  font-weight: 600;\n  background-color: yellowgreen;\n`;\n\nexport const Paragraf = styled.p`\n  font-weight: 700;\n`;\n","import { Container, Paragraf } from \"./Statistics.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics(p) {\n  const { good, neutral, bad, total, positivePercentage } = p;\n\n  return (\n    <Container>\n      {total === 0 && <h3>No feedback given</h3>}\n\n      {total > 0 && (\n        <>\n          <Paragraf>Good: {good}</Paragraf>\n          <Paragraf>Neutral: {neutral}</Paragraf>\n          <Paragraf>Bad: {bad}</Paragraf>\n          <Paragraf>Total: {total}</Paragraf>\n          <Paragraf>Positive feedback: {positivePercentage}%</Paragraf>\n        </>\n      )}\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const names = [\"good\", \"neutral\", \"bad\"];\n\n  function onLeaveFeedback(e) {\n    switch (e.target.id) {\n      case \"good\":\n        return setGood(good + 1);\n\n      case \"neutral\":\n        return setNeutral(neutral + 1);\n\n      case \"bad\":\n        return setBad(bad + 1);\n\n      default:\n        return;\n    }\n  }\n\n  function countTotal() {\n    return good + neutral + bad;\n  }\n\n  function countPositivePercentage() {\n    return Math.round((good / countTotal()) * 100);\n  }\n\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions names={names} eventHandler={onLeaveFeedback} />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotal()}\n        positivePercentage={countPositivePercentage()}\n      />\n    </Section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}