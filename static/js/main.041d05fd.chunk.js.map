{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js"],"names":["Button","styled","button","FeedbackOptions","props","eventHandler","name","id","type","onClick","Container","div","h1","Section","title","children","Paragraf","p","Statistics","good","neutral","bad","total","positivePercentage","INITIAL_STATE","App","state","keyNames","Object","keys","onLeaveFeedback","e","target","setState","countTotal","countPositivePercentage","Number","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAASC,IAAOC,OAAV,mP,OCsBJC,I,IAAAA,EArBf,SAAyBC,GACvB,IAAQC,EAAuBD,EAAvBC,aAAcC,EAASF,EAATE,KACtB,OACE,qCACE,cAACN,EAAD,CAAQO,GAAG,OAAOC,KAAK,SAASC,QAASJ,EAAzC,SACGC,EAAK,KAER,cAACN,EAAD,CAAQO,GAAG,UAAUC,KAAK,SAASC,QAASJ,EAA5C,SACGC,EAAK,KAER,cAACN,EAAD,CAAQO,GAAG,MAAMC,KAAK,SAASC,QAASJ,EAAxC,SACGC,EAAK,SCZDI,EAAYT,IAAOU,IAAV,uGAMDV,IAAOW,GAAV,0BCWHC,I,IAAAA,EAhBf,SAAiBT,GACf,IAAQU,EAAoBV,EAApBU,MAAOC,EAAaX,EAAbW,SAEf,OACE,eAACL,EAAD,WACGI,GAAS,6BAAKA,IACdC,MCPML,EAAYT,IAAOU,IAAV,0GAMTK,EAAWf,IAAOgB,EAAV,iDCuBNC,MA5Bf,SAAoBD,GAClB,IAAQE,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,QAASC,EAAmCJ,EAAnCI,IAAKC,EAA8BL,EAA9BK,MAAOC,EAAuBN,EAAvBM,mBAEnC,OACE,eAAC,EAAD,WACa,IAAVD,GAAe,mDAEfA,EAAQ,GACP,qCACE,eAACN,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBI,KACpB,eAACJ,EAAD,mBAAgBK,KAChB,eAACL,EAAD,qBAAkBM,KAClB,eAACN,EAAD,iCAA8BO,EAA9B,cCXJC,EAAgB,CACpBL,KAAM,EACNC,QAAS,EACTC,IAAK,GAGDI,E,4MACJC,MAAQF,E,EAERG,SAAWC,OAAOC,KAAK,EAAKH,O,EAE5BI,gBAAkB,SAACC,GACjB,IAAQxB,EAAOwB,EAAEC,OAATzB,GACR,EAAK0B,UAAS,SAACP,GAAD,sBAAenB,EAAKmB,EAAMnB,GAAM,O,EAGhD2B,WAAa,WACX,MAA+B,EAAKR,MACpC,OADA,EAAQP,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBc,wBAA0B,WACxB,OAAOC,OAAOC,KAAKC,MAAO,EAAKZ,MAAMP,KAAO,EAAKe,aAAgB,O,4CAGnE,WACE,MAA+BK,KAAKb,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQiB,KAAKL,aACbX,EAAqBgB,KAAKJ,0BAEhC,OACE,eAAC,EAAD,CAASrB,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,KAAMiC,KAAKZ,SACXtB,aAAckC,KAAKT,kBAErB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GAnCZiB,aA0CHf,IChDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.041d05fd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 80px;\n  padding: 8px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-weight: 500;\n  color: blue;\n  background-color: yellow;\n  &:not(:last-of-type) {\n    margin-right: 20px;\n  }\n`;\n","import { Button } from \"./FeedbackOptions.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions(props) {\n  const { eventHandler, name } = props;\n  return (\n    <>\n      <Button id=\"good\" type=\"button\" onClick={eventHandler}>\n        {name[0]}\n      </Button>\n      <Button id=\"neutral\" type=\"button\" onClick={eventHandler}>\n        {name[1]}\n      </Button>\n      <Button id=\"bad\" type=\"button\" onClick={eventHandler}>\n        {name[2]}\n      </Button>\n    </>\n  );\n}\nFeedbackOptions.propTypes = {\n  name: PropTypes.arrayOf(PropTypes.string).isRequired,\n  eventHandler: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  text-align: center;\n  background-color: yellowgreen;\n  padding: 20px;\n`;\n\nexport const Title = styled.h1``;\n","import { Container } from \"./Section.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction Section(props) {\n  const { title, children } = props;\n\n  return (\n    <Container>\n      {title && <h1>{title}</h1>}\n      {children}\n    </Container>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  text-align: center;\n  font-weight: 600;\n  background-color: yellowgreen;\n`;\n\nexport const Paragraf = styled.p`\n  font-weight: 700;\n`;\n","import { Container, Paragraf } from \"./Statistics.styled\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics(p) {\n  const { good, neutral, bad, total, positivePercentage } = p;\n\n  return (\n    <Container>\n      {total === 0 && <h3>No feedback given</h3>}\n\n      {total > 0 && (\n        <>\n          <Paragraf>Good: {good}</Paragraf>\n          <Paragraf>Neutral: {neutral}</Paragraf>\n          <Paragraf>Bad: {bad}</Paragraf>\n          <Paragraf>Total: {total}</Paragraf>\n          <Paragraf>Positive feedback: {positivePercentage}%</Paragraf>\n        </>\n      )}\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nconst INITIAL_STATE = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nclass App extends Component {\n  state = INITIAL_STATE;\n\n  keyNames = Object.keys(this.state);\n\n  onLeaveFeedback = (e) => {\n    const { id } = e.target;\n    this.setState((state) => ({ [id]: state[id] + 1 }));\n  };\n\n  countTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercentage = () => {\n    return Number(Math.round((this.state.good / this.countTotal()) * 100));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotal();\n    const positivePercentage = this.countPositivePercentage();\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          name={this.keyNames}\n          eventHandler={this.onLeaveFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}